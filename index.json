{
  "path": "/exercises",
  "dirs": [
    {
      "path": "/00-how-to-study-javascript",
      "files": [
        {
          "path": "/readme.js"
        },
        {
          "path": "/1-studying-in-js-tutor.js"
        },
        {
          "path": "/2-studying-in-devtools.js"
        },
        {
          "path": "/3-studying-in-vscode.js"
        },
        {
          "path": "/4-example-variable.js",
          "isExample": true
        },
        {
          "path": "/5-example-conditional.js",
          "isExample": true
        },
        {
          "path": "/6-example-function.js",
          "isExample": true
        }
      ]
    },
    {
      "path": "/01-variables",
      "dirs": [
        {
          "path": "/examples",
          "files": [
            {
              "path": "/1-declaration-assignment-reassignment.js"
            },
            {
              "path": "/2-reusing-variables.js"
            },
            {
              "path": "/3-const-vs-let.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/1-let.js"
            },
            {
              "path": "/2-let.js"
            },
            {
              "path": "/3-let-or-const.js"
            },
            {
              "path": "/4-let-or-const.js"
            },
            {
              "path": "/5-let-or-const.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/02-primitive-types",
      "dirs": [
        {
          "path": "/examples",
          "files": [
            {
              "path": "/boolean-undefined-null.js"
            },
            {
              "path": "/number.js"
            },
            {
              "path": "/string.js"
            },
            {
              "path": "/typeof.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/fill-in-the-type.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/03-comparing-and-asserting",
      "dirs": [
        {
          "path": "/examples",
          "files": [
            {
              "path": "/1-strict-equality.js"
            },
            {
              "path": "/2-assignment-vs-comparison.js"
            },
            {
              "path": "/3-console-assert.js"
            },
            {
              "path": "/4-testing-with-assert.js"
            },
            {
              "path": "/object-is.js"
            },
            {
              "path": "/strict-inequality.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/1.js"
            },
            {
              "path": "/2.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/04-value-swaps",
      "dirs": [
        {
          "path": "/example",
          "files": [
            {
              "path": "/double-swap.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/1-double-swap.js"
            },
            {
              "path": "/2-triple-swap.js"
            },
            {
              "path": "/3-triple-swap.js"
            },
            {
              "path": "/4-quadruple-swap.js"
            },
            {
              "path": "/5-quadruple-swap.js"
            },
            {
              "path": "/6-let-and-const.js"
            },
            {
              "path": "/7-let-and-const.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/05-functions-101",
      "dirs": [
        {
          "path": "/0-examples",
          "files": [
            {
              "path": "/1-declaration-vs-execution.js"
            },
            {
              "path": "/2-parameters-and-arguments.js"
            },
            {
              "path": "/3-return-values.js"
            },
            {
              "path": "/4-tracing-execution.js"
            },
            {
              "path": "/5-scope.js"
            },
            {
              "path": "/6-test-cases.js"
            }
          ],
          "isExample": true,
          "config": {
            "buttons": [
              {
                "console": true
              },
              {
                "debugger": true
              },
              {
                "flowViz": true
              },
              {
                "jsTutor": true
              }
            ]
          }
        },
        {
          "path": "/1-scrambles",
          "files": [
            {
              "path": "/1-write-expected.js"
            },
            {
              "path": "/2-write-arguments.js"
            },
            {
              "path": "/3-write-function.js"
            }
          ]
        },
        {
          "path": "/2-local-param-global",
          "files": [
            {
              "path": "/0-example.js",
              "isExample": true
            },
            {
              "path": "/1-parameter-local.js"
            },
            {
              "path": "/2-parameter-global.js"
            },
            {
              "path": "/3-parameter-global.js"
            },
            {
              "path": "/4-local-global.js"
            },
            {
              "path": "/5-local-global.js"
            },
            {
              "path": "/6-parameter-local-global.js"
            },
            {
              "path": "/7-prameter-local-global.js"
            },
            {
              "path": "/extra-pure-functions.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/06-explicit-coercion",
      "dirs": [
        {
          "path": "/examples",
          "files": [
            {
              "path": "/1-string.js"
            },
            {
              "path": "/2-boolean.js"
            },
            {
              "path": "/3-number.js"
            },
            {
              "path": "/4-about-nan.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/1-write-expected.js"
            },
            {
              "path": "/2-write-arguments.js"
            },
            {
              "path": "/3-write-function.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/07-logical-operators",
      "dirs": [
        {
          "path": "/examples",
          "files": [
            {
              "path": "/0-truthiness.js"
            },
            {
              "path": "/1-or.js"
            },
            {
              "path": "/2-and.js"
            },
            {
              "path": "/3-ternary.js"
            },
            {
              "path": "/4-not.js"
            },
            {
              "path": "/5-short-circuiting.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/and.js"
            },
            {
              "path": "/not.js"
            },
            {
              "path": "/or.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/08-functions-201",
      "files": [
        {
          "path": "/0-example.js",
          "isExample": true
        },
        {
          "path": "/1-exercise.js"
        },
        {
          "path": "/2-exercise.js"
        }
      ]
    },
    {
      "path": "/09-block-scope",
      "dirs": [
        {
          "path": "/1-missing-values",
          "files": [
            {
              "path": "/1.js"
            },
            {
              "path": "/2.js"
            }
          ]
        },
        {
          "path": "/2-missing-variables",
          "files": [
            {
              "path": "/1.js"
            },
            {
              "path": "/2.js"
            },
            {
              "path": "/3.js"
            }
          ]
        },
        {
          "path": "/3-assign-values",
          "files": [
            {
              "path": "/1.js"
            },
            {
              "path": "/2.js"
            },
            {
              "path": "/3.js"
            }
          ]
        },
        {
          "path": "/4-declare-and-assign",
          "files": [
            {
              "path": "/1.js"
            },
            {
              "path": "/2.js"
            },
            {
              "path": "/3.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/10-conditional-statements",
      "dirs": [
        {
          "path": "/0-examples",
          "files": [
            {
              "path": "/1-if.js"
            },
            {
              "path": "/2-if-else.js"
            },
            {
              "path": "/3-if-else-if-else.js"
            },
            {
              "path": "/4-sequential-conditionals.js"
            },
            {
              "path": "/5-nested-conditionals.js"
            },
            {
              "path": "/6-unreachable-paths.js"
            }
          ],
          "isExample": true,
          "config": {
            "buttons": [
              {
                "console": true
              },
              {
                "debugger": true
              },
              {
                "flowViz": true
              },
              {
                "jsTutor": true
              }
            ]
          }
        },
        {
          "path": "/1-execution-paths",
          "files": [
            {
              "path": "/1-write-expected.js"
            },
            {
              "path": "/2-write-arguments.js"
            },
            {
              "path": "/3-write-arguments.js"
            },
            {
              "path": "/4-write-function.js"
            },
            {
              "path": "/5-write-function.js"
            }
          ]
        },
        {
          "path": "/2-conditional-bodies",
          "files": [
            {
              "path": "/1-write-expected.js"
            },
            {
              "path": "/2-write-arguments.js"
            },
            {
              "path": "/3-write-function.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/11-refactoring-conditionals",
      "dirs": [
        {
          "path": "/0-examples",
          "files": [
            {
              "path": "/0-statement-and-operator.js"
            },
            {
              "path": "/1-if-else.js"
            },
            {
              "path": "/2-if-else-if-else.js"
            },
            {
              "path": "/3-nested.js"
            }
          ],
          "isExample": true,
          "config": {
            "buttons": [
              {
                "console": false
              },
              {
                "debugger": true
              },
              {
                "flowViz": true
              },
              {
                "jsTutor": true
              }
            ]
          }
        },
        {
          "path": "/1-statement-to-operator",
          "files": [
            {
              "path": "/1-if-else.js"
            },
            {
              "path": "/2-if-else-if-else.js"
            },
            {
              "path": "/3-nested.js"
            }
          ]
        },
        {
          "path": "/2-operator-to-statement",
          "files": [
            {
              "path": "/1-if-else.js"
            },
            {
              "path": "/2-if-else-if-else.js"
            },
            {
              "path": "/3-nested.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/12-functions-301",
      "dirs": [
        {
          "path": "/0-examples",
          "files": [
            {
              "path": "/1-documenting-functions.js"
            },
            {
              "path": "/2-enforcing-types.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/1-fill-in-the-blanks",
          "files": [
            {
              "path": "/1-write-tests.js"
            },
            {
              "path": "/2-write-tests.js"
            },
            {
              "path": "/3-pass-tests.js"
            },
            {
              "path": "/4-pass-tests.js"
            }
          ]
        },
        {
          "path": "/2-fix-the-bugs",
          "files": [
            {
              "path": "/1.js"
            },
            {
              "path": "/2.js"
            },
            {
              "path": "/3.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/13-roles-of-variables",
      "files": [
        {
          "path": "/readme.js"
        },
        {
          "path": "/back-tracing.js"
        }
      ]
    },
    {
      "path": "/14-increment-and-decrement",
      "dirs": [
        {
          "path": "/examples",
          "files": [
            {
              "path": "/postfix-decrement.js"
            },
            {
              "path": "/postfix-increment.js"
            },
            {
              "path": "/prefix-decrement.js"
            },
            {
              "path": "/prefix-increment.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/1.js"
            },
            {
              "path": "/2.js"
            },
            {
              "path": "/3.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/15-while",
      "dirs": [
        {
          "path": "/examples",
          "files": [
            {
              "path": "/1-while.js"
            },
            {
              "path": "/2-while-infinite.js"
            }
          ],
          "isExample": true,
          "config": {
            "loopGuard": {
              "active": true,
              "max": 10
            },
            "buttons": [
              {
                "console": true
              },
              {
                "debugger": true
              },
              {
                "flowViz": true
              },
              {
                "jsTutor": true
              }
            ]
          }
        },
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/1-write-tests.js"
            },
            {
              "path": "/2-fix-the-bugs.js"
            },
            {
              "path": "/3-pass-tests.js"
            },
            {
              "path": "/4-pass-tests.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/16-for",
      "dirs": [
        {
          "path": "/examples",
          "files": [
            {
              "path": "/1-for-many-lines.js"
            },
            {
              "path": "/2-for-one-line.js"
            },
            {
              "path": "/3-for-infinite.js"
            }
          ],
          "isExample": true,
          "config": {
            "loopGuard": {
              "active": true,
              "max": 20
            },
            "buttons": [
              {
                "console": true
              },
              {
                "debugger": true
              },
              {
                "flowViz": true
              },
              {
                "jsTutor": true
              }
            ]
          }
        },
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/1-write-tests.js"
            },
            {
              "path": "/2-fix-the-bugs.js"
            },
            {
              "path": "/3-pass-tests.js"
            },
            {
              "path": "/4-pass-tests.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/17-refactoring-loops",
      "dirs": [
        {
          "path": "/exercises",
          "files": [
            {
              "path": "/1-for-to-while.js"
            },
            {
              "path": "/2-for-to-while.js"
            },
            {
              "path": "/3-while-to-for.js"
            },
            {
              "path": "/4-while-to-for.js"
            }
          ]
        }
      ],
      "config": {
        "loopGuard": {
          "active": true,
          "max": 20
        },
        "buttons": [
          {
            "console": false
          },
          {
            "debugger": true
          },
          {
            "jsTutor": true
          }
        ]
      }
    },
    {
      "path": "/18-functions-401",
      "dirs": [
        {
          "path": "/0-examples",
          "files": [
            {
              "path": "/0-implcit-return.js"
            },
            {
              "path": "/and.js"
            },
            {
              "path": "/complex.js"
            },
            {
              "path": "/ternary.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/1-refactors",
          "files": [
            {
              "path": "/1-implicit-to-explicit.js"
            },
            {
              "path": "/2-implicit-to-explicit.js"
            },
            {
              "path": "/3-explicit-to-implicit.js"
            },
            {
              "path": "/4-explicit-to-implicit.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/19-implicit-coercion",
      "dirs": [
        {
          "path": "/0-examples",
          "files": [
            {
              "path": "/0-complicated-but-learnable.js"
            },
            {
              "path": "/1-plus.js"
            },
            {
              "path": "/2-loose-equality.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/1-write-tests-arithmetic",
          "files": [
            {
              "path": "/division.js"
            },
            {
              "path": "/multiplication.js"
            },
            {
              "path": "/remainder.js"
            },
            {
              "path": "/subtraction.js"
            },
            {
              "path": "/unary-minus.js"
            },
            {
              "path": "/unary-plus.js"
            }
          ]
        },
        {
          "path": "/2-write-tests-relational",
          "files": [
            {
              "path": "/greater-than-or-equal-to.js"
            },
            {
              "path": "/greater-than.js"
            },
            {
              "path": "/less-than-or-equal-to.js"
            },
            {
              "path": "/less-than.js"
            }
          ]
        },
        {
          "path": "/3-replicate",
          "files": [
            {
              "path": "/loose-inequality.js"
            },
            {
              "path": "/remainder.js"
            },
            {
              "path": "/unary-minus.js"
            }
          ]
        }
      ]
    },
    {
      "path": "/20-operator-precedence",
      "dirs": [
        {
          "path": "/0-examples",
          "files": [
            {
              "path": "/readme.js"
            },
            {
              "path": "/1-literals.js"
            },
            {
              "path": "/2-literals.js"
            },
            {
              "path": "/3-literals.js"
            },
            {
              "path": "/4-variables.js"
            },
            {
              "path": "/5-variables.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/1-literals",
          "files": [
            {
              "path": "/1-coercion-and-comparing.js"
            },
            {
              "path": "/2-arithmetic.js"
            },
            {
              "path": "/3-logical-operators.js"
            },
            {
              "path": "/4-all-together.js"
            }
          ]
        },
        {
          "path": "/2-variables",
          "files": [
            {
              "path": "/1-coercing-and-comparing.js"
            },
            {
              "path": "/2-arithmetic.js"
            },
            {
              "path": "/3-logical-operators.js"
            },
            {
              "path": "/4-all-together.js"
            },
            {
              "path": "/5-all-together.js"
            }
          ]
        },
        {
          "path": "/extra--syntax-trees",
          "files": [
            {
              "path": "/readme.js"
            },
            {
              "path": "/1-types-and-comparisons.js"
            },
            {
              "path": "/2-arithmetic.js"
            },
            {
              "path": "/3-unary-operators.js"
            },
            {
              "path": "/4-ternaries.js"
            },
            {
              "path": "/5-and.js"
            },
            {
              "path": "/6-or.js"
            },
            {
              "path": "/7-or-and-or.js"
            },
            {
              "path": "/8-all-together.js"
            }
          ],
          "config": {
            "buttons": [
              {
                "console": false
              },
              {
                "debugger": true
              },
              {
                "esprima": true
              }
            ]
          }
        }
      ]
    },
    {
      "path": "/21-refactoring-expressions",
      "dirs": [
        {
          "path": "/0-examples",
          "files": [
            {
              "path": "/0-expanding.js"
            },
            {
              "path": "/1-types-and-comparisons.js"
            },
            {
              "path": "/2-arithmetic.js"
            },
            {
              "path": "/3-unary-operators.js"
            },
            {
              "path": "/4-ternaries.js"
            },
            {
              "path": "/5-and.js"
            },
            {
              "path": "/6-or.js"
            },
            {
              "path": "/7-or-and-or.js"
            },
            {
              "path": "/8-all-together.js"
            }
          ],
          "isExample": true
        },
        {
          "path": "/1-coercion-and-comparing",
          "files": [
            {
              "path": "/1.js"
            },
            {
              "path": "/2.js"
            },
            {
              "path": "/3.js"
            }
          ]
        },
        {
          "path": "/2-arithmetic",
          "files": [
            {
              "path": "/1.js"
            },
            {
              "path": "/2.js"
            },
            {
              "path": "/3.js"
            }
          ]
        },
        {
          "path": "/3-logical-operators",
          "files": [
            {
              "path": "/1.js"
            },
            {
              "path": "/2.js"
            },
            {
              "path": "/3.js"
            }
          ]
        },
        {
          "path": "/4-all-together",
          "files": [
            {
              "path": "/1.js"
            },
            {
              "path": "/2.js"
            },
            {
              "path": "/3.js"
            },
            {
              "path": "/4.js"
            },
            {
              "path": "/5.js"
            }
          ]
        }
      ]
    }
  ],
  "config": {
    "title": "Debuggercises",
    "path": "/exercises",
    "reviewPath": "/review",
    "loopGuard": {
      "active": false,
      "max": 20
    },
    "buttons": [
      {
        "console": true
      },
      {
        "debugger": true
      },
      {
        "jsTutor": true
      }
    ]
  },
  "lastBuild": "2020-06-24T17:04:07.913Z"
}